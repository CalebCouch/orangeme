import type { PaginationCursor } from '../types/query-types.js';
import type { Signer } from '../types/signer.js';
import type { EventsFilter, EventsQueryMessage } from '../types/events-types.js';
import { AbstractMessage } from '../core/abstract-message.js';
export type EventsQueryOptions = {
    signer: Signer;
    filters: EventsFilter[];
    cursor?: PaginationCursor;
    messageTimestamp?: string;
};
export declare class EventsQuery extends AbstractMessage<EventsQueryMessage> {
    static parse(message: EventsQueryMessage): Promise<EventsQuery>;
    static create(options: EventsQueryOptions): Promise<EventsQuery>;
}
//# sourceMappingURL=events-query.d.ts.map