import type { Signer } from '../types/signer.js';
import type { EventsFilter, EventsSubscribeMessage } from '../types/events-types.js';
import { AbstractMessage } from '../core/abstract-message.js';
export type EventsSubscribeOptions = {
    signer: Signer;
    messageTimestamp?: string;
    filters?: EventsFilter[];
};
export declare class EventsSubscribe extends AbstractMessage<EventsSubscribeMessage> {
    static parse(message: EventsSubscribeMessage): Promise<EventsSubscribe>;
    /**
     * Creates a EventsSubscribe message.
     *
     * @throws {DwnError} if json schema validation fails.
     */
    static create(options: EventsSubscribeOptions): Promise<EventsSubscribe>;
}
//# sourceMappingURL=events-subscribe.d.ts.map