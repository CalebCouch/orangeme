// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.32.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `DescriptorSet` is not used by any `pub` functions, thus it is ignored.
// The type `Fees` is not used by any `pub` functions, thus it is ignored.
// The type `Price` is not used by any `pub` functions, thus it is ignored.
// The type `PriceRes` is not used by any `pub` functions, thus it is ignored.
// The type `Spot` is not used by any `pub` functions, thus it is ignored.
// The type `SpotRes` is not used by any `pub` functions, thus it is ignored.
// The type `Transaction` is not used by any `pub` functions, thus it is ignored.

Future<void> dropdb(
        {required String path, required String descriptors, dynamic hint}) =>
    RustLib.instance.api
        .dropdb(path: path, descriptors: descriptors, hint: hint);

Future<Response> invoke(
        {required String method, required List<String> args, dynamic hint}) =>
    RustLib.instance.api.invoke(method: method, args: args, hint: hint);

class Response {
  final int status;
  final String message;

  const Response({
    required this.status,
    required this.message,
  });

  static Future<Response> badRequest({required String method, dynamic hint}) =>
      RustLib.instance.api.responseBadRequest(method: method, hint: hint);

  static Future<Response> error({required String message, dynamic hint}) =>
      RustLib.instance.api.responseError(message: message, hint: hint);

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<Response> newInstance(
          {required int status, required String message, dynamic hint}) =>
      RustLib.instance.api
          .responseNew(status: status, message: message, hint: hint);

  @override
  int get hashCode => status.hashCode ^ message.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Response &&
          runtimeType == other.runtimeType &&
          status == other.status &&
          message == other.message;
}
