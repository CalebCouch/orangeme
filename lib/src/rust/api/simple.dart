// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `async_rust`, `internet_thread`, `is_same_date`, `price_thread`, `spawn`, `wallet_thread`

Future<String> ruststart(
        {required String path,
        required String platform,
        required FutureOr<String> Function(String) thread}) =>
    RustLib.instance.api.crateApiSimpleRuststart(
        path: path, platform: platform, thread: thread);

Future<String> getpage({required String path, required Page page}) =>
    RustLib.instance.api.crateApiSimpleGetpage(path: path, page: page);

Future<String> setstate(
        {required String path, required Field field, required String data}) =>
    RustLib.instance.api
        .crateApiSimpleSetstate(path: path, field: field, data: data);

Future<String> setStateAddress(
        {required String path, required String address}) =>
    RustLib.instance.api
        .crateApiSimpleSetStateAddress(path: path, address: address);

Future<String> setStateConversation(
        {required String path, required BigInt index}) =>
    RustLib.instance.api
        .crateApiSimpleSetStateConversation(path: path, index: index);

Future<String> setStateBtc({required String path, required double btc}) =>
    RustLib.instance.api.crateApiSimpleSetStateBtc(path: path, btc: btc);

Future<String> setStatePriority({required String path, required int index}) =>
    RustLib.instance.api
        .crateApiSimpleSetStatePriority(path: path, index: index);

Future<String> updateDisplayAmount(
        {required String path, required String input}) =>
    RustLib.instance.api
        .crateApiSimpleUpdateDisplayAmount(path: path, input: input);

String formatTransactionDate({required String date, required String time}) =>
    RustLib.instance.api
        .crateApiSimpleFormatTransactionDate(date: date, time: time);

Future<String> broadcastTx({required String path}) =>
    RustLib.instance.api.crateApiSimpleBroadcastTx(path: path);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Field>>
abstract class Field implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Page>>
abstract class Page implements RustOpaqueInterface {}
